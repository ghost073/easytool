<?php
/**
 *
 * Author: youling073
 * Date: 2019/10/11 17:33
 * Description: 工具 demo
 */

namespace samples\tool;
include_once __DIR__.'/../../vendor/autoload.php';

use PHPUnit\Framework\TestCase;
use Youling073\Easytool\Tool\Tool;

class ToolTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->tool = new Tool();

    }

    /**
     * 生成密码
     *
     * @group printdata
     *
     */
    public function testgenPassword()
    {
        $password = '123456';

        $res = $this->tool->genPassword($password);

        //         $2y$12$GIJPh5.IkO/wPOSTzIK2BuQ.ZgDKFjINcGpaCnlSNZFLh5cwDlcvO
        //var_dump($res);

        $this->assertTrue(true);
    }

    /**
     * 验证密码
     */
    public function testverifyPassword()
    {
        $password = '123456';
        $hash = '$2y$12$GIJPh5.IkO/wPOSTzIK2BuQ.ZgDKFjINcGpaCnlSNZFLh5cwDlcvO';

        $res = $this->tool->verifyPassword($password, $hash);
        $this->assertTrue($res);
    }

    /**
     * 改变配置返回格式
     */
    public function testdefineTxtView()
    {
        // 全局配置定义的时候 key 用语义化的字符串，使用的时候用 id ，数据库中存储的也是id
        $arr = [
            'one' => [
                'id' => 1,
                'title' => '一'
            ],
            'two' => [
                'id' => 2,
                'title' => '二'
            ],
        ];
        $res = $this->tool->defineTxtView($arr, 'id');

        $expected = [
            1 => [
                'id' => 1,
                'title' => '一'
            ],
            2 => [
                'id' => 2,
                'title' => '二'
            ],
        ];
        $this->assertEquals($expected, $res);
    }

    /**
     * 提供接口返回指定的KEY 二维数组
     */
    public function testgetJsJsonArr()
    {
        $arr = [
            [
                'id' => 1,
                'title' => '一',
            ],
            [
                'id' => 2,
                'title' => '二'
            ]
        ];

        $res = $this->tool->getJsJsonArr($arr, ['id']);
        $expected = [
            [
                'id' => 1,
            ],
            [
                'id' => 2,
            ]
        ];
        $this->assertEquals($expected, $res);
    }

    /**
     * 提供接口返回指定的KEY 一位数组
     */
    public function testgetJsJsonData()
    {
        $arr = [
            'id' => 1,
            'title' => '一',
        ];

        $res = $this->tool->getJsJsonData($arr, ['title']);
        $expected = [
            'title' => '一'
        ];
        $this->assertEquals($expected, $res);
    }

    /**
     * 分格式化成元
     */
    public function testformatMoneyYuan()
    {
        $num = 1235;

        $res = $this->tool->formatMoneyYuan($num);

        $expected = 12.35;
        $this->assertEquals($expected, $res);
    }

    /**
     * 手机号中间4位隐藏
     */
    public function testformatMobile()
    {
        $num = '12345678901';

        $res = $this->tool->formatMobile($num);

        $expected = '12345****01';
        $this->assertEquals($expected, $res);
    }

    /**
     * 获得文件大小
     */
    public function testgetRealSize()
    {
        $num = 1024;

        $res = $this->tool->getRealSize($num);

        $expected = '1KB';
        $this->assertEquals($expected, $res);
    }

    /**
     * 过滤0的ID值，数据库查询有用
     */
    public function testfilterIds()
    {
        $arr = [0,0,1,2];

        $res = $this->tool->filterIds($arr);

        $expected = [1,2];
        $this->assertEquals($expected, $res);
    }

    /**
     * 获得图片URL
     */
    public function testgetImgUrl()
    {
        $str = '/011/108/1.jpg';

        $res = $this->tool->getImgUrl($str, 'http://1.com');

        $expected = 'http://1.com/011/108/1.jpg';
        $this->assertEquals($expected, $res);
    }


    /**
     * 随机生成字符串
     */
    public function testrandomStr()
    {
        $res = $this->tool->randomStr(6);

        // wr0006
        // var_dump($res);

        $this->assertTrue(true);
    }

    /**
     * 获得两个数值的比值， 保留2位小数
     */
    public function testgetNumPercent()
    {
        $num1 = 2;
        $num2 = 3;

        $res = $this->tool->getNumPercent($num1, $num2);

        $expected = '66.67%';
        $this->assertEquals($expected, $res);
    }

    /**
     * ali oss 获得上传视频截取的第一帧
     *
     * @group printdata
     */
    public function testaliossVideoImgUrl()
    {
        $url = 'http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4';

        $res = $this->tool->aliossVideoImgUrl($url);

        var_dump($res);
        $this->assertTrue(true);
    }

    /**
     * ali oss 获得上传图片缩略图
     *
     * @group printdata
     */
    public function testaliossResizeImgUrl()
    {
        $url = 'http://image-demo.oss-cn-hangzhou.aliyuncs.com/example.jpg';

        $res = $this->tool->aliossResizeImgUrl($url);

        var_dump($res);
        $this->assertTrue(true);
    }
}
