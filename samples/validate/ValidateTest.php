<?php
/**
 *
 * Author: youling073
 * Date: 2019/10/11 15:59
 * Description: 验证 demo
 */

namespace samples\validate;
include_once __DIR__.'/../../vendor/autoload.php';

use PHPUnit\Framework\TestCase;
use Youling073\Easytool\Validate\Validate;

class ValidateTest extends TestCase
{

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->validate = new Validate();

    }

    /**
     * 验证中文名
     */
    public function testIsChineseName()
    {
        $name = '你好';
        $res = $this->validate->isChineseName($name);
        $this->assertTrue($res);
    }

    /**
     * 验证身份证号
     * http://sfz.uzuzuz.com/?region=330781&birthday=19850907&sex=1&num=5
     */
    public function testIsIdcard()
    {
        $name = '330781198509076913';
        $res = $this->validate->isIdcard($name);

        $this->assertTrue($res);
    }

    /**
     * 验证QQ
     */
    public function testIsQQ()
    {
        $name = '123456';
        $res = $this->validate->isQQ($name);
        $this->assertTrue($res);
    }

    /**
     * 验证银行卡
     */
    public function testIsBankcard()
    {
        $name = '1234567981547045';
        $res = $this->validate->isBankcard($name);
        $this->assertTrue($res);
    }

    /**
     * 验证中文英文名
     */
    public function testIsChineseEnName()
    {
        $name = 'nihao';
        $res = $this->validate->isChineseEnName($name);
        $this->assertTrue($res);
    }

    /**
     * 验证手机号
     */
    public function testIsPhoneNum()
    {
        $name = '18777777777';
        $res = $this->validate->isPhoneNum($name);
        $this->assertTrue($res);
    }

    /**
     * 验证邮箱
     */
    public function testIsEmail()
    {
        $name = '123456@qq.com';
        $res = $this->validate->isEmail($name);
        $this->assertTrue($res);
    }

    /**
     * 验证特殊符号(如需要验证其他字符，自行转义 "\X" 添加)
     */
    public function testIsSpacialChar()
    {
        $name = '@/';
        $res = $this->validate->isSpacialChar($name);
        $this->assertTrue($res);
    }

    /**
     * 检查密码在某个区间之内，且中英文混合
     */
    public function testCheckPassword()
    {
        $name = '15kjk';
        $res = $this->validate->checkPassword($name,2,18);
        $this->assertTrue($res);
    }

    /**
     * 字数在某区间
     */
    public function testcheckCharNum()
    {
        $name = '你好朋友56';
        $res = $this->validate->checkCharNum($name,6,18);
        $this->assertTrue($res);
    }

    /**
     * 2位小数
     */
    public function testisTwoFloat()
    {
        $name = 1.55;
        $res = $this->validate->isTwoFloat($name);
        $this->assertTrue($res);
    }

    /**
     * １位小数
     */
    public function testisOneFloat()
    {
        $name = '1.7';
        $res = $this->validate->isOneFloat($name);
        $this->assertTrue($res);
    }

    /**
     * 是否正整数
     */
    public function testisRPint()
    {
        $name = 51;
        $res = $this->validate->isRPint($name);
        $this->assertTrue($res);
    }

    /**
     * 是否整数
     */
    public function testisInt()
    {
        $name = 68;
        $res = $this->validate->isInt($name);
        $this->assertTrue($res);
    }
}